{
  "hash": "0f987def7b449633c412e49566aa33d1",
  "result": {
    "markdown": "---\ntitle: \"Week 3 Challenge Instructions\"\nauthor: \"Yakub Rabiutheen\"\ndescription: \"Degree and Density of a Network\"\ndate: \"03/06/2023\"\nformat:\n  html:\n    toc: true\n    code-fold: true\n    code-copy: true\n    code-tools: true\n# editor: visual\ncategories: \n  - challenge_3\n  - instructions\n  # - railroads\n  # - faostat\n  # - wildbirds\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in library(tidyverse): there is no package called 'tidyverse'\n```\n:::\n\n```{.r .cell-code}\nlibrary(igraph)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'igraph'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    decompose, spectrum\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:base':\n\n    union\n```\n:::\n\n```{.r .cell-code}\nlibrary(statnet)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tergm\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ergm\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: network\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'network' 1.18.1 (2023-01-24), part of the Statnet Project\n* 'news(package=\"network\")' for changes since last version\n* 'citation(\"network\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'network'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:igraph':\n\n    %c%, %s%, add.edges, add.vertices, delete.edges, delete.vertices,\n    get.edge.attribute, get.edges, get.vertex.attribute, is.bipartite,\n    is.directed, list.edge.attributes, list.vertex.attributes,\n    set.edge.attribute, set.vertex.attribute\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'ergm' 4.4.0 (2023-01-26), part of the Statnet Project\n* 'news(package=\"ergm\")' for changes since last version\n* 'citation(\"ergm\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n'ergm' 4 is a major update that introduces some backwards-incompatible\nchanges. Please type 'news(package=\"ergm\")' for a list of major\nchanges.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: networkDynamic\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'networkDynamic' 0.11.3 (2023-02-15), part of the Statnet Project\n* 'news(package=\"networkDynamic\")' for changes since last version\n* 'citation(\"networkDynamic\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'tergm':\n  method                   from\n  simulate_formula.network ergm\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'tergm' 4.1.1 (2022-11-07), part of the Statnet Project\n* 'news(package=\"tergm\")' for changes since last version\n* 'citation(\"tergm\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'tergm'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ergm':\n\n    snctrl\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: ergm.count\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'ergm.count' 4.1.1 (2022-05-24), part of the Statnet Project\n* 'news(package=\"ergm.count\")' for changes since last version\n* 'citation(\"ergm.count\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: sna\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: statnet.common\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'statnet.common'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following object is masked from 'package:ergm':\n\n    snctrl\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    attr, order\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nsna: Tools for Social Network Analysis\nVersion 2.7-1 created on 2023-01-24.\ncopyright (c) 2005, Carter T. Butts, University of California-Irvine\n For citation information, type citation(\"sna\").\n Type help(package=\"sna\") to get started.\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'sna'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:igraph':\n\n    betweenness, bonpow, closeness, components, degree, dyad.census,\n    evcent, hierarchy, is.connected, neighborhood, triad.census\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: tsna\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n\n'statnet' 2019.6 (2019-06-13), part of the Statnet Project\n* 'news(package=\"statnet\")' for changes since last version\n* 'citation(\"statnet\")' for citation information\n* 'https://statnet.org' for help, support, and other information\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\n```\n:::\n\n\n## Challenge Overview\n\nDescribe the many measures of degree, as well as density, of a network and compare \n\n## Degree\n\nReading in Climate Data.\n\nThe Climate Dataframe has a Semicolor for it's Seperator.\n\n::: {.cell}\n\n```{.r .cell-code}\nclimate_df <- read.csv(\"posts/_data/climate0205-allop.csv\",, sep =  \";\") \n```\n\n::: {.cell-output .cell-output-stderr}\n```\nWarning in file(file, \"rt\"): cannot open file\n'posts/_data/climate0205-allop.csv': No such file or directory\n```\n:::\n\n::: {.cell-output .cell-output-error}\n```\nError in file(file, \"rt\"): cannot open the connection\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nclimate_df <- climate_df %>% subset(select = -c(X))\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate_df' not found\n```\n:::\n:::\n\n\n\n\nNow Turning the Climate Dataframe into an igraph Object and then a Network.\n\n::: {.cell}\n\n```{.r .cell-code}\nclimate.ig <- graph_from_adjacency_matrix(as.matrix(climate_df), weighted = TRUE, mode = \"directed\", add.rownames = TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate_df' not found\n```\n:::\n\n```{.r .cell-code}\nclimate.net <- as.network(as.matrix(climate_df), directed = TRUE, weighted = TRUE)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate_df' not found\n```\n:::\n:::\n\n\nPrinting the Network Attributes\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(climate.net)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate.net' not found\n```\n:::\n:::\n\n\n Network attributes:\n  vertices = 34 \n  directed = TRUE \n  hyper = FALSE \n  loops = FALSE \n  multiple = FALSE \n  bipartite = FALSE \n  total edges= 291 \n    missing edges= 0 \n    non-missing edges= 291 \n\n\nThe Climate  network has 34 vertices and is undirected, with bidirectional connections between entities. There are no loops or multiple edges present, indicating a simpler structure. The bipartite nature of the network divides the vertices into two distinct sets. In total, there are 34 edges representing the direct relationships between entities, with no missing connections in the network representation.\n\n\n\n\n# Dyad Census\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndyad.census(climate.net)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate.net' not found\n```\n:::\n:::\n\n\n-65 mutually connected dyads, indicating bidirectional connections between pairs of entities. \n- 151 Asymmetrical \n-365 Null dyads.\n\n\n# Triad Census\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntriad.census(climate.net, mode = \"graph\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate.net' not found\n```\n:::\n:::\n\n        0    1   2   3\n[1,] 3023 2016 787 158\n\nTriad Census\n-3023 triads with no ties, suggesting the presence of isolated entities or disconnected clusters within the network\n-2016 with one Tie\n-787 with two ties\n- 158 with three Ties\n\n\n##Create Climate Node\n\n\n::: {.cell}\n\n```{.r .cell-code}\nname <- climate.net %v% \"vertex.names\"\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate.net' not found\n```\n:::\n\n```{.r .cell-code}\ndegree <- degree(climate.net)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate.net' not found\n```\n:::\n\n```{.r .cell-code}\nindegree <- degree(climate.net, cmode = \"indegree\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate.net' not found\n```\n:::\n\n```{.r .cell-code}\noutdegree <- degree(climate.net, cmode = \"outdegree\")\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate.net' not found\n```\n:::\n\n```{.r .cell-code}\nclimate.nodes <- data.frame(\n  name = name,\n  degree = degree,\n  indegree = indegree,\n  outdegree = outdegree\n)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'name' not found\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmean(climate.nodes$degree)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate.nodes' not found\n```\n:::\n:::\n\n\nAverage is 17\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(climate.nodes)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate.nodes' not found\n```\n:::\n:::\n\n\n-34 vertices in total, \n\n-the degree distribution ranges from a minimum of 2 to a maximum of 40. =\n\n- The median degree of 16.5 further reinforces this observation, indicating that half of the vertices have a degree of 16 or lower\n\n\n## Density\n\nCompute the density of the network. Is this a global or local measure? Does it have a relationship with average degree? \n\n\n::: {.cell}\n\n```{.r .cell-code}\nnetwork.density(climate.net)\n```\n\n::: {.cell-output .cell-output-error}\n```\nError in eval(expr, envir, enclos): object 'climate.net' not found\n```\n:::\n:::\n\n\nThe Density is 0.259, which indicates approximately 25.9% of the possible edges are present in the network. \n\n\nDensity is  a global measure that quantifies the proportion of actual edges present in the network compared to the total number of possible edges. \n\nWith an average degree of 17.17 and a density of 0.259, we observe a moderate level of connectivity in the \"climate.nodes\" network. The average degree signifies a relatively high number of edges per vertex, indicating a denser network. \n\n\n## Random Network\n\nCreate a random (Erdos-Renyi) network with the same number of nodes and edges than the network of your choice. On `igraph`, the necessary commands are `random.graph.game(n, p.or.m, type = c(\"gnp\", \"gnm\"), directed = FALSE, loops = FALSE)` (deprecated), `sample_gnp(n, p, directed = FALSE, loops = FALSE)` or `sample_gnm(n, m, directed = FALSE, loops = FALSE)`. The `p.or.m` argument is to specify the probability of an edge $p$ or the number of edges $m$.\n  \nCompare the densities, dyad and triad censuses, and degree distributions, with the measures of the network of your choice. Does the comparison us something about the network of your choice? \n\n\n\n::: {.cell}\n\n:::",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}